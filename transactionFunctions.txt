int findNextLow(int x)
{
	for(int i=x; i<COMM_NUM; i++)
	{
		if(commoditiesHeld[i]<minThreshold[i])
		{
			return i;
		}
	}
}

int checkStatus(int x)
{
	if(commoditiesHeld[x]<minThreshold[i])
	{
		return 1;
	}
	if(commoditiesHeld[x]>maxThreshold[i])
	{
		return 3;
	}
	if(commoditiesHeld[x]<maxThreshold[i])
	{
		return 2;
	}
}

for(int i=0; i<COMM_NUMM; i++)
{
	int low=agentA.findNextLow(i);
	if(agentB.checkStatus(low)==1)
	{
		i=alow;
		continue;
	{
	if(agentB.checkStatus(alow)==3)
	{
		for(int j=0; j<COMM_NUM; j++)
		{
			int blow=agentB.findNextLow(j);
			if(agentA.checkStatus(blow)==1)
			{
				j=blow;
				continue;
			}
			if(agentA.checkStatus(blow)==3)
			{
				double coms[4];
				coms[0]=agentA.needThreshold[alow]-agentA.commoditiesHeld[alow];
				coms[1]=agentB.commoditiesHeld[alow]-agentB.wantThreshold[alow];
				coms[2]=agentB.needThreshold[blow]-agentB.commoditiesHeld[blow];
				coms[3]=agentA.commoditiesHeld[blow]-agentA.wantThreshold[blow];
				double* x = min_element(coms, coms+4);
				double change=*x;
				agentA.commoditiesHeld[alow]+=aneed;
				agentB.commoditiesHeld[alow]-=aneed;
				agentA.commoditiesHeld[blow]-=aneed;
				agentB.commoditiesHeld[blow]+=aneed;
			}
		}
	}
	else
	{
		
	}
}
